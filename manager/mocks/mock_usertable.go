// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/beerus/manager (interfaces: ITestTable)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockITestTable is a mock of ITestTable interface
type MockITestTable struct {
	ctrl     *gomock.Controller
	recorder *MockITestTableMockRecorder
}

// MockITestTableMockRecorder is the mock recorder for MockITestTable
type MockITestTableMockRecorder struct {
	mock *MockITestTable
}

// NewMockITestTable creates a new mock instance
func NewMockITestTable(ctrl *gomock.Controller) *MockITestTable {
	mock := &MockITestTable{ctrl: ctrl}
	mock.recorder = &MockITestTableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockITestTable) EXPECT() *MockITestTableMockRecorder {
	return m.recorder
}

// DoSomething mocks base method
func (m *MockITestTable) DoSomething() error {
	ret := m.ctrl.Call(m, "DoSomething")
	ret0, _ := ret[0].(error)
	return ret0
}

// DoSomething indicates an expected call of DoSomething
func (mr *MockITestTableMockRecorder) DoSomething() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoSomething", reflect.TypeOf((*MockITestTable)(nil).DoSomething))
}
